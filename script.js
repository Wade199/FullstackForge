// Translations object
const translations = {
    fr: {
        'nav-about': 'About',
        'nav-experience': 'Experiences',
        'nav-projects': 'Projets',
        'nav-contact': 'Contact',
        'language': 'Langue',
        'greeting': 'Bonjour, je suis',
        'job-title': 'DÃ©veloppeur Full Stack',
        'download-cv': 'TÃ©lÃ©charger CV',
        'contact-btn': 'Contact',
        'learn-more': 'En savoir plus',
        'about-title': 'Ã€ propos de moi',
        'experience': 'ExpÃ©riences',
        'years-exp': '3 ans',
        'education': 'Formation',
        'education-details': 'BTS SIO option SLAM (Services Informatiques aux Organisations)<br />Actuellement en 3Ã¨me annÃ©e Bachelor DevOps Fullstack (l\'Epsi d\'ARRAS)',
        'about-text': 'DÃ©veloppeur Full Stack passionnÃ©, je crÃ©e des applications web et mobiles tout en m\'intÃ©ressant aux bonnes pratiques DevOps. Mon parcours m\'a permis de travailler sur diffÃ©rents projets et de dÃ©velopper mes compÃ©tences techniques et organisationnelles. Ce portfolio prÃ©sente mes rÃ©alisations et la maniÃ¨re dont j\'aborde chaque projet. Bonne visite !',
        'discover-projects': 'DÃ©couvrez mes projets',
        'experience-title': 'ExpÃ©riences',
        'frontend-mobile': 'ðŸ‘‰ DÃ©veloppement Frontend et <br />ðŸ‘‰ Mobile',
        'backend': 'ðŸ‘‰ DÃ©veloppement Backend',
        'exp-level': 'ExpÃ©rience',
        'intermediate': 'IntermÃ©diaire',
        'basic': 'Basique',
        'explore-recent': 'Explorer mes rÃ©cents',
        'projects-title': 'Projets',
        'project-one': 'Projet Un',
        'project-two': '<br /><br /><br /><br />Projet Deux',
        'project-three': '<br /><br /><br />Projet trois',
        'contact-me': 'Contactez-moi âœ…',
        'contact-title': 'Contact'
    },
    en: {
        'nav-about': 'About',
        'nav-experience': 'Experience',
        'nav-projects': 'Projects',
        'nav-contact': 'Contact',
        'language': 'Language',
        'greeting': 'Hello, I am',
        'job-title': 'Full Stack Developer',
        'download-cv': 'Download CV',
        'contact-btn': 'Contact',
        'learn-more': 'Learn more',
        'about-title': 'About Me',
        'experience': 'Experience',
        'years-exp': '3 years',
        'education': 'Education',
        'education-details': 'BTS SIO option SLAM (Computer Services for Organizations)<br />Currently in 3rd year Bachelor DevOps Fullstack (Epsi Arras)',
        'about-text': 'Passionate Full Stack Developer, I create web and mobile applications while interested in DevOps best practices. My journey has allowed me to work on various projects and develop my technical and organizational skills. This portfolio showcases my achievements and how I approach each project. Enjoy your visit!',
        'discover-projects': 'Discover my projects',
        'experience-title': 'Experience',
        'frontend-mobile': 'ðŸ‘‰ Frontend & <br />ðŸ‘‰ Mobile Development',
        'backend': 'ðŸ‘‰ Backend Development',
        'exp-level': 'Experienced',
        'intermediate': 'Intermediate',
        'basic': 'Basic',
        'explore-recent': 'Explore my recent',
        'projects-title': 'Projects',
        'project-one': 'Project One',
        'project-two': '<br /><br /><br /><br />Project Two',
        'project-three': '<br /><br /><br />Project Three',
        'contact-me': 'Contact me âœ…',
        'contact-title': 'Contact'
    },
    es: {
        'nav-about': 'Acerca de',
        'nav-experience': 'Experiencia',
        'nav-projects': 'Proyectos',
        'nav-contact': 'Contacto',
        'language': 'Idioma',
        'greeting': 'Hola, soy',
        'job-title': 'Desarrollador Full Stack',
        'download-cv': 'Descargar CV',
        'contact-btn': 'Contacto',
        'learn-more': 'Saber mÃ¡s',
        'about-title': 'Sobre mÃ­',
        'experience': 'Experiencia',
        'years-exp': '3 aÃ±os',
        'education': 'FormaciÃ³n',
        'education-details': 'BTS SIO opciÃ³n SLAM (Servicios InformÃ¡ticos para Organizaciones)<br />Actualmente en 3er aÃ±o de Bachelor DevOps Fullstack (Epsi Arras)',
        'about-text': 'Desarrollador Full Stack apasionado, creo aplicaciones web y mÃ³viles mientras me intereso en las mejores prÃ¡cticas DevOps. Mi trayectoria me ha permitido trabajar en varios proyectos y desarrollar mis habilidades tÃ©cnicas y organizativas. Este portafolio presenta mis logros y cÃ³mo abordo cada proyecto. Â¡Disfruta tu visita!',
        'discover-projects': 'Descubre mis proyectos',
        'experience-title': 'Experiencia',
        'frontend-mobile': 'ðŸ‘‰ Desarrollo Frontend y <br />ðŸ‘‰ MÃ³vil',
        'backend': 'ðŸ‘‰ Desarrollo Backend',
        'exp-level': 'Experiencia',
        'intermediate': 'Intermedio',
        'basic': 'BÃ¡sico',
        'explore-recent': 'Explora mis recientes',
        'projects-title': 'Proyectos',
        'project-one': 'Proyecto Uno',
        'project-two': '<br /><br /><br /><br />Proyecto Dos',
        'project-three': '<br /><br /><br />Proyecto Tres',
        'contact-me': 'ContÃ¡ctame âœ…',
        'contact-title': 'Contacto'
    }
};

// Current language
let currentLanguage = 'fr';

// Toggle Menu Function
function toggleMenu() {
    const menu = document.querySelector(".menu-links");
    const icon = document.querySelector(".hamburger-icon");
    menu.classList.toggle("open");
    icon.classList.toggle("open");
}

// Toggle Language Dropdown
function toggleLanguageDropdown(location = 'desktop') {
    let dropdownId;
    if (location === 'footer') {
        dropdownId = 'languageDropdownFooter';
    } else if (location === 'mobile') {
        dropdownId = 'languageDropdownMobile';
    } else {
        dropdownId = 'languageDropdown';
    }
    
    const dropdown = document.getElementById(dropdownId);
    dropdown.classList.toggle('active');
    
    // Close other dropdowns
    const allDropdowns = document.querySelectorAll('.language-dropdown');
    allDropdowns.forEach(d => {
        if (d.id !== dropdownId) {
            d.classList.remove('active');
        }
    });
}

// Close dropdown when clicking outside
document.addEventListener('click', function(event) {
    const languageSelectors = document.querySelectorAll('.language-selector');
    let clickedInside = false;
    
    languageSelectors.forEach(selector => {
        if (selector.contains(event.target)) {
            clickedInside = true;
        }
    });
    
    if (!clickedInside) {
        document.querySelectorAll('.language-dropdown').forEach(dropdown => {
            dropdown.classList.remove('active');
        });
    }
});

// Change Language Function
function changeLanguage(lang) {
    currentLanguage = lang;
    
    // Update all elements with data-translate attribute
    const elements = document.querySelectorAll('[data-translate]');
    elements.forEach(element => {
        const key = element.getAttribute('data-translate');
        if (translations[lang] && translations[lang][key]) {
            element.innerHTML = translations[lang][key];
        }
    });
    
    // Update active state in language options
    const allOptions = document.querySelectorAll('.language-option');
    allOptions.forEach(option => {
        option.classList.remove('active');
    });
    
    const selectedOptions = document.querySelectorAll(`.language-option[onclick="changeLanguage('${lang}')"]`);
    selectedOptions.forEach(option => {
        option.classList.add('active');
    });
    
    // Close all dropdowns
    document.querySelectorAll('.language-dropdown').forEach(dropdown => {
        dropdown.classList.remove('active');
    });
    
    // Save language preference
    localStorage.setItem('preferredLanguage', lang);
}

// Load saved language preference on page load
window.addEventListener('load', function() {
    const savedLanguage = localStorage.getItem('preferredLanguage');
    if (savedLanguage && translations[savedLanguage]) {
        changeLanguage(savedLanguage);
    }
    
    // Initialize typing effect
    const titleElement = document.querySelector('#profile .title');
    if (titleElement) {
        const originalText = titleElement.textContent;
        typeWriter(titleElement, originalText, 100);
    }
    
    // Initialize scroll animations
    initScrollAnimations();
});

// Add smooth scroll behavior
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    });
});

// Initialize scroll animations
function initScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -100px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    const sections = document.querySelectorAll('section');
    sections.forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(20px)';
        section.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(section);
    });
}

// Add parallax effect to background elements
window.addEventListener('scroll', function() {
    const scrolled = window.pageYOffset;
    const codeSymbols = document.querySelectorAll('.code-symbol');
    const floatingIcons = document.querySelectorAll('.floating-icon');
   
    codeSymbols.forEach((symbol, index) => {
        const speed = 0.1 + (index * 0.02);
        symbol.style.transform = `translateY(${scrolled * speed}px) rotate(${scrolled * 0.05}deg)`;
    });
   
    floatingIcons.forEach((icon, index) => {
        const speed = 0.15 + (index * 0.03);
        icon.style.transform = `translateY(${scrolled * speed}px) scale(${1 + (scrolled * 0.0001)})`;
    });
});

// Typing effect function
function typeWriter(element, text, speed = 100) {
    let i = 0;
    element.innerHTML = '';
   
    function type() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }
   
    type();
}

// Add hover effect to project cards
document.addEventListener('DOMContentLoaded', function() {
    const projectCards = document.querySelectorAll('.color-container');
   
    projectCards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-10px) scale(1.02)';
            this.style.transition = 'all 0.3s ease';
        });
       
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
    });
});

// Add click animation to buttons
document.querySelectorAll('.btn').forEach(button => {
    button.addEventListener('click', function(e) {
        let ripple = document.createElement('span');
        ripple.classList.add('ripple');
        this.appendChild(ripple);
       
        let x = e.clientX - e.target.offsetLeft;
        let y = e.clientY - e.target.offsetTop;
       
        ripple.style.left = `${x}px`;
        ripple.style.top = `${y}px`;
       
        setTimeout(() => {
            ripple.remove();
        }, 600);
    });
});